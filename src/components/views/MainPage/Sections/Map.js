import React, { useState, useEffect } from 'react'import { useSelector } from 'react-redux'import { MapContainer, Popup, TileLayer, LayersControl } from 'react-leaflet'import L from 'leaflet'import { AiFillEnvironment } from 'react-icons/ai'import myPhoto from '../../../../images/me.png'import defaultMarker from '../../../../images/default_marker.svg'import { ChangeView } from './ChangeView'import { MyMarker } from './MyMarker'import { THEME } from '../../../../types/types'import iconShadow from 'leaflet/dist/images/marker-shadow.png'const DefaultIcon = L.icon({  iconUrl: defaultMarker,  shadowUrl: iconShadow,})L.Marker.prototype.options.icon = DefaultIconconst { BaseLayer } = LayersControlconst { ALIADE_SMOOTH_DARK, ALIADE_SMOOTH } = THEMEconst SATDIA_MAPS_API_KEY = process.env.REACT_APP_SATDIA_MAPS_API_KEYfunction Map() {  const [img, setImg] = useState(myPhoto)  const [curLocation, setCurLocation] = useState({    latitude: 37.5866076,    longitude: 126.9726223,  })  const { latitude, longitude } = curLocation  const curPosition = [latitude, longitude]  const { imgSrc, tags } = useSelector((state) => state.post)  /* 현재 위치 조회 */  const hasGeolocation = () => {    // geolocation 유무 확인    return navigator.geolocation  }  const success = (position) => {    const { latitude, longitude } = position.coords    setCurLocation({ ...curLocation, latitude, longitude })  }  const error = () => {    console.error('error for geoLocation')  }  const getLocation = () => {    // 현재 위치 가져오는 함수    if (!hasGeolocation) {      // 없을 때      window.alert('위치 정보 허용해주세요!!')    } else {      navigator.geolocation.getCurrentPosition(success, error)    }  }  useEffect(() => {    setImg(imgSrc || img)  }, [img])  return (    <div className="map__container">      <MapContainer        center={curPosition}        zoom={13}        scrollWheelZoom        style={{ height: '100%' }}        zoomControl={false}      >        <ChangeView center={curPosition} zoom={13} />        <LayersControl>          <BaseLayer checked name="Alidade Smooth Dark">            <TileLayer              attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'              url={`${ALIADE_SMOOTH_DARK}${SATDIA_MAPS_API_KEY}`}            />          </BaseLayer>          <BaseLayer name="Alidade Smooth">            <TileLayer              attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'              url={`${ALIADE_SMOOTH}${SATDIA_MAPS_API_KEY}`}            />          </BaseLayer>        </LayersControl>        <MyMarker position={curPosition}>          <Popup autoPan={false} style={{ width: '10rem' }}>            <img src={img} alt="myPhoto" className={'img__popup'} />            {tags && (              <div className={'span_group'}>                {tags.map((tag) => (                  <span key={tag} className={'span__tags'}>                    {tag}{' '}                  </span>                ))}              </div>            )}          </Popup>        </MyMarker>        <button onClick={getLocation} className={'button__curLocation'}>          <AiFillEnvironment />        </button>      </MapContainer>      <ul className={'ul__dropdown'}>        <li>menu1</li>        <li>menu2</li>        <li>menu3</li>        <li>menu4</li>      </ul>    </div>  )}export default Map