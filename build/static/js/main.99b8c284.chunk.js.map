{"version":3,"sources":["images/me.png","components/ChangeView.js","components/MyMarker.js","components/TestD3.js","components/MainPage.js","modules/cameraImage.js","components/WebcamComponent.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["ChangeView","center","zoom","useMap","setView","MyMarker","props","leafletRef","useRef","useEffect","current","openPopup","Marker","ref","cameraBtnStyle","width","background","border","color","padding","cursor","LayersControl","BaseLayer","TestD3","curLocation","curPosition","latitude","longitude","useState","myPhoto","img","setImg","history","useHistory","success","useSelector","state","cameraImg","className","MapContainer","scrollWheelZoom","style","height","zoomControl","TileLayer","attribution","url","position","Popup","autoPan","src","alt","borderRadius","onClick","push","formStyle","display","justifyContent","alignItems","inputStyle","searchBtnStyle","sectionStyle","flexDirection","curLocationBtnStyle","MainPage","Geocode","setApiKey","process","setLanguage","setRegion","enableDebug","GoogleMap","currentAddr","a","fromAddress","then","response","results","geometry","location","lat","lng","catch","err","console","log","searchInput","setSearchInput","setCurLocation","hasGeolocation","navigator","geolocation","coords","error","onClickHandler","e","preventDefault","length","alert","htmlFor","marginRight","type","tabIndex","name","id","placeholder","onChange","currentTarget","value","onChangeHandler","marginBottom","getCurrentPosition","REPLACE_IMG","videoConstraints","facingMode","WebcamComponent","dispatch","useDispatch","webcamRef","captureImg","setCaptureImg","capture","React","useCallback","imageSrc","getScreenshot","payload","audio","screenshotFormat","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","createStoreWidthMiddlware","applyMiddleware","reduxThunk","createStore","ReactDOM","render","StrictMode","store","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.99b8c284.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/me.67f65a09.png\";","import React from 'react';\r\nimport {useMap} from \"react-leaflet\";\r\n\r\nexport function ChangeView({center, zoom}) {\r\n    // 이게 있어야 지도의 center 로 움직일 수 있음\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n}","import React, {useEffect, useRef} from \"react\";\r\nimport {Marker} from \"react-leaflet\";\r\n\r\nexport const MyMarker = (props) => {\r\n    const leafletRef = useRef();\r\n    useEffect(() => {\r\n        leafletRef.current.openPopup();\r\n    }, [])\r\n    return <Marker ref={leafletRef} {...props} />\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {MapContainer, Popup, TileLayer, LayersControl} from 'react-leaflet';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport myPhoto from '../images/me.png';\r\nimport {ChangeView} from \"./ChangeView\";\r\nimport {MyMarker} from \"./MyMarker\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst cameraBtnStyle = {width: '100%', background:'tomato', border: 'none', color: \"white\", padding: '0.5rem', cursor: 'pointer'}\r\nconst {BaseLayer} = LayersControl;\r\n\r\nfunction TestD3({curLocation}) {\r\n    const {latitude, longitude} = curLocation;\r\n    const curPosition = [latitude, longitude];\r\n    const [img, setImg] = useState(myPhoto);\r\n    const history = useHistory();\r\n    const {success} = useSelector(state => state.cameraImg)\r\n\r\n    const openCamera = () => {\r\n        history.push('/camera');\r\n    };\r\n\r\n    useEffect(() => {\r\n        setImg(success ? success : img);\r\n\r\n    }, [img]);\r\n\r\n\r\n    return (\r\n        <div className=\"map__container\">\r\n            <MapContainer\r\n                center={curPosition}\r\n                zoom={13}\r\n                scrollWheelZoom={true}\r\n                style={{ height: \"calc(100vh - 200px)\" }}\r\n                zoomControl={false}\r\n            >\r\n                <ChangeView center={curPosition} zoom={13} />\r\n                {/*<LayersControl>*/}\r\n                {/*    <BaseLayer checked name='Alidade Smooth Dark'>*/}\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url='https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\r\n                        />\r\n                {/*    </BaseLayer>*/}\r\n                {/*    <BaseLayer name='Alidade Smooth'>*/}\r\n                {/*        <TileLayer*/}\r\n                {/*            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\r\n                {/*            url='https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'*/}\r\n                {/*        />*/}\r\n                {/*    </BaseLayer>*/}\r\n                {/*    <BaseLayer name='Outdoors'>*/}\r\n                {/*        <TileLayer*/}\r\n                {/*            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\r\n                {/*            url='https://tiles.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}{r}.png'*/}\r\n                {/*        />*/}\r\n                {/*    </BaseLayer>*/}\r\n                {/*    <BaseLayer name='OSM Bright'>*/}\r\n                {/*        <TileLayer*/}\r\n                {/*            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\r\n                {/*            url='https://tiles.stadiamaps.com/tiles/osm_bright/{z}/{x}/{y}{r}.png'*/}\r\n                {/*        />*/}\r\n                {/*    </BaseLayer>*/}\r\n                {/*    <BaseLayer name='Normal'>*/}\r\n                {/*        <TileLayer*/}\r\n                {/*            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\r\n                {/*            url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}{r}.png'*/}\r\n                {/*        />*/}\r\n                {/*    </BaseLayer>*/}\r\n                {/*</LayersControl>*/}\r\n                <MyMarker position={curPosition}>\r\n                    <Popup autoPan={false}>\r\n                        <img src={img} alt='myPhoto' style={{width: '100%', border: 'solid tomato', background: \"lightcoral\", borderRadius: 10}} />\r\n                        <button style={cameraBtnStyle} onClick={openCamera}>찰칵! 여기보세요</button>\r\n                    </Popup>\r\n                </MyMarker>\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestD3;","import React, {useEffect, useState} from 'react';\r\nimport Geocode from 'react-geocode';\r\nimport TestD3 from './TestD3';\r\n\r\nconst formStyle = {background:'lightsalmon', height: 80, display: \"flex\", justifyContent:'center', alignItems:'center'};\r\nconst inputStyle = {width: '70%', height: '60%', border:'none'};\r\nconst searchBtnStyle = {height: '60%', border: 'none', background:'tomato', color:'white', cursor:'pointer'};\r\nconst sectionStyle = {background:'lightsalmon', height: 120, display: \"flex\", justifyContent:'center', alignItems:'center', flexDirection: 'column'};\r\nconst curLocationBtnStyle = {height: '40%', border: 'none', background:'tomato', color:'white', cursor:'pointer'};\r\n\r\nexport default  function MainPage({history}) {\r\n\r\n    // Geocode\r\n    Geocode.setApiKey(process.env.REACT_APP_GOOGLE_API_KEY)\r\n    Geocode.setLanguage('en')\r\n    Geocode.setRegion('es')\r\n    Geocode.enableDebug()\r\n\r\n    const GoogleMap = async (currentAddr) => {\r\n        return Geocode.fromAddress(currentAddr)\r\n            .then( response => {\r\n                const { lat, lng } = response.results[0].geometry.location;\r\n                return {lat, lng}\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [curLocation, setCurLocation] = useState({ latitude: 37.5866076, longitude: 126.9726223});\r\n    const hasGeolocation = () => {\r\n        return (navigator.geolocation);\r\n    };\r\n    const success = (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setCurLocation({...curLocation, latitude, longitude})\r\n    }\r\n\r\n    const error = () => {\r\n        console.error('error for geoLocation');\r\n    }\r\n    const getLocation = () => {\r\n        if(!hasGeolocation) {\r\n            // 없을 때\r\n            alert('위치 정보 허용해주세요!!');\r\n\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(success, error);\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = e => {\r\n        setSearchInput(e.currentTarget.value);\r\n    };\r\n\r\n    const onClickHandler = async e => {\r\n        e.preventDefault();\r\n        let latitude, longitude;\r\n        if(searchInput.length > 0) {\r\n            const {lat, lng} = await GoogleMap(searchInput)\r\n            latitude = lat;\r\n            longitude= lng;\r\n        }else {\r\n            alert('1글자 이상 검색하세요!!')\r\n        }\r\n        setCurLocation({...curLocation, latitude, longitude})\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(curLocation)\r\n    }, [curLocation])\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <form style={formStyle}>\r\n                    <label htmlFor='keyword' style={{ marginRight: 30 }}>검색하세요</label>\r\n                    <input type='text' tabIndex='0' name='keyword' id='keyword' placeholder='1글자 이상 검색해주세요.. 오류나요.. 처리 아직 안했어요..' style={inputStyle} onChange={e => onChangeHandler(e)}/>\r\n                    <button type='search' style={searchBtnStyle} onClick={e => onClickHandler(e)}>검색하기</button>\r\n                </form>\r\n                <section style={sectionStyle}>\r\n                    <div style={{marginBottom: 10}}>위치 설정 허용해주셔야 기능이 작동합니다!</div>\r\n                    <button style={curLocationBtnStyle} onClick={getLocation}>현재 위치 조회!</button>\r\n                    <div style={{marginBottom: 10}}>{`위도 : ${curLocation.latitude}, 경도: ${curLocation.longitude}`}</div>\r\n                </section>\r\n            </header>\r\n            <TestD3 curLocation={curLocation} />\r\n        </>\r\n    );\r\n}","const REPLACE_IMG = 'cameraImage/REPLACE_IMG';\r\n\r\nexport function replaceImage(imgSrc) {\r\n    return{\r\n        type: REPLACE_IMG,\r\n        payload: imgSrc\r\n    }\r\n}\r\n\r\nexport default function cameraImageReducer(state={}, action) {\r\n    switch (action.type) {\r\n        case REPLACE_IMG:\r\n            return {...state, success: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {useRef, useState} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport Webcam from \"react-webcam\";\r\nimport {replaceImage} from \"../modules/cameraImage\";\r\n\r\nconst videoConstraints = {\r\n    facingMode: \"user\"\r\n};\r\n\r\nfunction WebcamComponent(props) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const webcamRef = useRef(null);\r\n    const [captureImg, setCaptureImg] = useState(null);\r\n\r\n    const capture = React.useCallback(\r\n        () => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            setCaptureImg(imageSrc);\r\n            dispatch(replaceImage(imageSrc));\r\n        },\r\n        [webcamRef]\r\n    );\r\n    return (\r\n        <>\r\n            <Webcam\r\n                audio={false}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={videoConstraints}\r\n            />\r\n            <button onClick={capture}>Capture photo</button>\r\n            {\r\n                captureImg &&\r\n                <img src={captureImg} alt='사진'/>\r\n            }\r\n            <button onClick={()=>history.push('/')}>돌아가기</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WebcamComponent;","import React from 'react';\nimport {BrowserRouter,Route, Link,Switch} from 'react-router-dom';\nimport './App.css';\nimport MainPage from \"./components/MainPage\";\nimport WebcamComponent from \"./components/WebcamComponent\";\n\nfunction App() {\n    return(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/' component={MainPage} />\n                <Route exact path='/camera' component={WebcamComponent} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from 'redux';\r\nimport cameraImg from \"./cameraImage\";\r\n\r\nconst rootReducer = combineReducers({\r\n    cameraImg,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport \"leaflet/dist/leaflet.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {applyMiddleware, createStore} from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport rootReducer from './modules';\n\nconst createStoreWidthMiddlware = applyMiddleware(\n    reduxThunk\n)(createStore);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={createStoreWidthMiddlware(\n          // 리듀서를 생성 후 넣어준다\n          rootReducer,\n          // 개발자 도구를 사용하기 위한 설정\n          window.__REDUX_DEVTOOLS_EXTENSION__ &&\n          window.__REDUX_DEVTOOLS_EXTENSION__()\n      )}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}